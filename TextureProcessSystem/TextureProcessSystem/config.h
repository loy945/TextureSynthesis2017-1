//#define  texturesampleIndex 1
//#define lenFactor 2 //模型中的点距离乘以10倍之后，再去匹配样本中的点距离 5
//#define minTEDistance 0.02 //两个基元之间的最小距离
//#define  maxTEDistance 0.3
//#define selectRadius 300 //选择候选点的搜索半径 
//#define  minDis 0.06//0.08
//#define mapScale 0.13 //贴图映射缩放大小
//#define  minFloat 0.0000001
//#define maxMultiTextureLayer 10
//#define minCollapseDistance 0.06

#define  texturesampleIndex 1
#define lenFactor 1 //模型中的点距离乘以10倍之后，再去匹配样本中的点距离 5
#define minTEDistance 0.02 //两个基元之间的最小距离
#define  maxTEDistance 0.3
#define selectRadius 300 //选择候选点的搜索半径 
#define  minDis 0.06//0.08
#define mapScale 0.13 //贴图映射缩放大小
#define  minFloat 0.0000001
#define maxMultiTextureLayer 10
#define minCollapseDistance 0.06

//#define  texturesampleIndex 9
//#define lenFactor 1 //模型中的点距离乘以10倍之后，再去匹配样本中的点距离 5
//#define minTEDistance 0.02 //两个基元之间的最小距离
//#define  maxTEDistance 0.3
//#define selectRadius 500 //选择候选点的搜索半径 
//#define  minDis 0.06//0.08
//#define mapScale 0.15 //贴图映射缩放大小
//#define  minFloat 0.0000001
//#define maxMultiTextureLayer 10
//#define minCollapseDistance 0.06

//#define  texturesampleIndex 2
//#define lenFactor 2.5 //模型中的点距离乘以10倍之后，再去匹配样本中的点距离 5
//#define minTEDistance 0.02 //两个基元之间的最小距离
//#define  maxTEDistance 0.2
//#define selectRadius 300 //选择候选点的搜索半径 
//#define  minDis 0.05//0.08
//#define mapScale 0.15 //贴图映射缩放大小
//#define  minFloat 0.0000001
//#define maxMultiTextureLayer 10
//#define minCollapseDistance 0.05